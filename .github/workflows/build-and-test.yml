name: rx-angular CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  # Group concurrency on workflow, then:
  # - Is merge run? Group on branch name (`refs/heads/main`)
  # - Is pull request? Group on pull request branch name, for example `feat/add-awesome-feature`
  group: >-
    ${{ github.workflow }}-${{
      github.event_name == 'push'
        && github.ref
        || github.head_ref
    }}
  # Run merge workflows in sequence to prevent parallel deployments and releases
  # Cancel stale pull request runs in progress for the same branch
  cancel-in-progress: ${{ github.event_name != 'push' }}

env:
  NODE_OPTIONS: --max-old-space-size=6144
  NX_CLOUD_DISTRIBUTED_EXECUTION: true
  NX_DISTRIBUTED_TASK_EXECUTION: true
  NX_VERBOSE_LOGGING: false
  docs-name: docs
  docs-path: dist/apps/docs

jobs:
  dte_agents:
    runs-on: ubuntu-latest

    name: DTE Agents
    timeout-minutes: 20

    strategy:
      matrix:
        agent: [1, 2, 3, 4]

    steps:
      - name: Checkout all commits
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up dependencies
        uses: ./.github/actions/setup

      - name: Start Nx Cloud Agent ${{ matrix.agent }}
        run: npx nx-cloud start-agent

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout all commits
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up dependencies
        uses: ./.github/actions/setup

      - run: npx nx-cloud start-ci-run

      # Distribution strategy for 2 vCPUs per hosted runner (GitHub Free):
      #

      # lint: 2 tasks assigned at a time, 1 task per vCPU
      - name: Run Affected lint
        run: yarn nx affected:lint --parallel --max-parallel=2

      # test: 1 task assigned at a time with 2 parallel processes, 1 process per vCPU
      - name: Run Affected test
        run: yarn nx affected:test --parallel --max-parallel=1 --max-workers=2 --ci --code-coverage

      # build: 2 tasks assigned at a time, 1 task per vCPU
      - name: Run Affected build
        run: yarn nx affected:build --exclude=docs --parallel --max-parallel=2

      # e2e: 1 tasks assigned at a time, 1 task per agent
      - name: Run Affected e2e
        run: yarn nx affected:e2e --parallel=false --max-parallel=1

      - run: npx nx-cloud stop-all-agents

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  # The docs project is built in a separate job because it requires Node.js 16
  build-docs:
    name: Build docs
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
    env:
      NX_CLOUD_DISTRIBUTED_EXECUTION: false
      NX_DISTRIBUTED_TASK_EXECUTION: false

    steps:
      - name: Checkout all commits
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up dependencies
        uses: ./.github/actions/setup
        with:
          # Docusaurus needs Node.js 16
          node-version: 16

      - name: Build docs
        run: yarn nx build docs

      - name: '[Merge] Upload docs'
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.docs-name }}
          path: ${{ env.docs-path }}

  deploy-docs:
    name: '[Merge] Deploy docs'
    runs-on: ubuntu-latest
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source
    if: github.ref == 'refs/heads/main'

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: www.rx-angular.io
      #url: ${{ steps.deployment.outputs.page_url }}

    needs: [build-docs]

    steps:
      - name: Download docs
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.docs-name }}
          path: ${{ env.docs-path }}

      - name: Set up GitHub Pages
        uses: actions/configure-pages@v2

      - name: Upload docs to GitHub Pages
        uses: actions/upload-pages-artifact@v1
        with:
          path: ${{ env.docs-path }}

      - name: Deploy docs to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
